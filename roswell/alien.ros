#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros dynamic-space-size=7000 -L sbcl-bin -m alien -Q -- $0 "$@"
|#
(declaim (sb-ext:muffle-conditions sb-ext:compiler-note style-warning))
(progn ;;init forms
  (ros:ensure-asdf)
  (ql:quickload '(:strips) :silent t)
  (uiop:symbol-call :strips :recompile-instance-dependent-code))

(in-package :strips)

(defun main (&rest argv)
  (declare (ignorable argv))
  (setf *terminal-io* *error-output*)
  (log:config :sane)
  (ematch argv
    ((list* "-t" (read *time-limit*) rest)
     (apply #'main rest))
    ((list* "-m" (read *memory-limit*) rest)
     (apply #'main rest))
    ((list* "--sg-compiled-branch-limit" (read *sg-compiled-branch-limit*) rest)
     (apply #'main rest))
    ((list* "--search-option" (read *search-option*) rest)
     (apply #'main rest))
    ((list* "--alias" (read alias) rest)
     (apply #'main
            "--search-option"
            (princ-to-string (second (assoc alias *aliases*)))
            rest))
    
    ((list problem)
     (print-plan
      (solve-once
       (find-domain problem) problem #'main-search)))
    
    ((list domain problem)
     (print-plan
      (solve-once domain problem #'main-search)))
    
    ((list domain problem plan-output-file)
     (solve-once-to-file
      domain problem plan-output-file #'main-search))
    (_
     (format *error-output* "Usage: alien.ros [options] [domain] problem [plan-output-file]~%")
     (format *error-output* "Got ARGV: ~a~%" argv)
     (format *error-output* "~{~30@a: ~a~%~}"
             (list "dynamic space size" (sb-ext:dynamic-space-size)
                   "lisp implementation type" (lisp-implementation-type)
                   "lisp implementation version" (lisp-implementation-version)
                   "machine instance" (machine-instance)
                   "machine type" (machine-type)
                   "machine version" (machine-version)
                   "software type" (software-type)
                   "software version" (software-version)))
     (show-doc
      `((-t sec *time-limit*)
        (-m kbyte *memory-limit*)
        (--sg-compiled-branch-limit limit *sg-compiled-branch-limit*)
        (--search-option SEXP *search-option*)
        (--alias NAME *aliases*))))))
;;; vim: set ft=lisp lisp:
